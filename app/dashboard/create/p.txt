//fungsi dapat menambah data paket 

"use client";
import React, { useState, useEffect } from "react";
import {
  collection,
  addDoc,
  doc,
  updateDoc,
  deleteDoc,
  getDoc,
} from "firebase/firestore";
import {
  getStorage,
  ref as storageRef,
  uploadBytes,
  getDownloadURL,
} from "firebase/storage";
import { v4 as uuidv4 } from "uuid";
import FirebaseConfig from "@/components/FirebaseConfig/FirebaseConfig";
import LayoutAuth from "@/components/LayoutAuth/page";
import { useRouter } from "next/navigation"; // Perubahan dari "next/navigation"
import Link from "next/link";

export default function Create() {
  const [nama_paket, setNamaPaket] = useState("");
  const [deskripsi, setDeskripsi] = useState("");
  const [orang, setOrang] = useState("");
  const [waktu, setWaktu] = useState("");
  const [ganti_pakaian, setGantiPakaian] = useState("");
  const [keuntungan1, setKeuntungan1] = useState("");
  const [keuntungan2, setKeuntungan2] = useState("");
  const [harga, setHarga] = useState("");
  const [backgroundImages, setBackgroundImages] = useState([]);
  const [backgroundFiles, setBackgroundFiles] = useState([]);
  const [selectedFile, setSelectedFile] = useState(null);

  const db = FirebaseConfig().firestore;
  const storage = FirebaseConfig().storage; // Initialize Firebase Storage
  const router = useRouter();

  let isNullOrWhiteSpaces = (value) => {
    value = value.toString();
    return value == null || value.replaceAll("", "").length < 1;
  };

  const handleFileChange = (file) => {
    setSelectedFile(file);
  };

  const addBackgroundImageInput = () => {
    setBackgroundImages((prevImages) => [...prevImages, null]);
    setBackgroundFiles((prevFiles) => [...prevFiles, null]);
  };

  const handleBackgroundFileChange = (file, index) => {
    const newFiles = [...backgroundFiles];
    newFiles[index] = file;
    setBackgroundFiles(newFiles);
  };

  let MasukkanDataPaket = async () => {
    if (
      isNullOrWhiteSpaces(nama_paket) ||
      isNullOrWhiteSpaces(deskripsi) ||
      isNullOrWhiteSpaces(orang) ||
      isNullOrWhiteSpaces(waktu) ||
      isNullOrWhiteSpaces(ganti_pakaian) ||
      isNullOrWhiteSpaces(keuntungan1) ||
      isNullOrWhiteSpaces(keuntungan2) ||
      isNullOrWhiteSpaces(harga)
    ) {
      alert("harap isi semua bidang");
      return;
    }

    const paketRef = doc(db, "Paket", nama_paket);
    const docSnap = await getDoc(paketRef);

    const backgroundStorageRefs = backgroundFiles.map(
        (file) => file && storageRef(storage, `images/${uuidv4()}_${file.name}`)
      );
      const backgroundDownloadURLs = await Promise.all(
        backgroundStorageRefs.map(async (storageRef, index) => {
          if (storageRef) {
            await uploadBytes(storageRef, backgroundFiles[index]);
            return await getDownloadURL(storageRef);
          }
          return null;
        })
      );

      const backgroundImagesData = {};
      backgroundDownloadURLs.forEach((url, index) => {
        if (url) {
          backgroundImagesData[`background_image_${index + 1}`] = url;
        }
      });

    if (docSnap.exists()) {
      alert("Paket Sudah ada, gunakan nama paket yang berbeda");
    } else {
      const deskripsiList = deskripsi.split("n");
      const storagePaketRef = storageRef(storage, `images/${uuidv4()}_${selectedFile.name}`);

      if (selectedFile) {
        uploadBytes(storagePaketRef, selectedFile)
          .then(async (snapshot) => {
            console.log("File uploaded", snapshot);
            const downloadURL = await getDownloadURL(storagePaketRef);

            await addDoc(collection(db, "Paket"), {
              nama_paket: nama_paket,
              deskripsi: deskripsi,
              orang: orang,
              waktu: waktu,
              ganti_pakaian: ganti_pakaian,
              keuntungan1: keuntungan1,
              keuntungan2: keuntungan2,
              harga: harga,
              url_gambar: downloadURL,
              background_images: backgroundImagesData,
            });

            alert("data berhasil ditambahkan");
            router.push("/dashboard");
          })
          .catch((error) => {
            console.error("error saat menambahkan data", error);
            alert("terjadi kesalahana");
          });
      } else {
        alert("pilih data terlebih dahulu");
      }
    }
  };

  return (
    <LayoutAuth>
      <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 space-y-4">
        <div className="flex flex-col gap-6">
          <div>
            <label className="block text-black dark:text-white">
              Nama Paket
            </label>
            <input
              value={nama_paket}
              onChange={(e) => setNamaPaket(e.target.value)}
              type="text"
              placeholder="Masukkan Nama Paket Foto"
              className="w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 font-medium outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary"
            />
          </div>
          <div>
            <label className=" block text-black dark:text-white">Studio</label>
            <input
              type="file"
              onChange={(e) => handleFileChange(e.target.files[0])}
              className="w-full rounded-md border border-stroke p-3 outline-none transition file:mr-4 file:rounded file:border-[0.5px] file:border-stroke file:bg-[#EEEEEE] file:py-1 file:px-2.5 file:text-sm file:font-medium focus:border-primary file:focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:file:border-strokedark dark:file:bg-white/30 dark:file:text-white"
            />
          </div>
          <div>
            <label className=" block text-black dark:text-white">
              Background Images
            </label>
            {backgroundImages.map((_, index) => (
              <div key={index} className="mb-4">
                <input
                  type="file"
                  onChange={(e) =>
                    handleBackgroundFileChange(e.target.files[0], index)
                  }
                  className="w-full rounded-md border border-stroke p-3 outline-none transition file:mr-4 file:rounded file:border-[0.5px] file:border-stroke file:bg-[#EEEEEE] file:py-1 file:px-2.5 file:text-sm file:font-medium focus:border-primary file:focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:file:border-strokedark dark:file:bg-white/30 dark:file:text-white"
                />
              </div>
            ))}
            <button
              onClick={addBackgroundImageInput}
              className="bg-blue-500 text-white px-4 py-2 rounded"
            >
              Add Background Image
            </button>
          </div>
          <div>
            <label className="block text-black dark:text-white">
              Deskripsi
            </label>
            <textarea
              value={deskripsi}
              onChange={(e) => setDeskripsi(e.target.value)}
              rows={6}
              placeholder="Masukkan Deskriprsi Paket"
              className="w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 font-medium outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary"
            ></textarea>
          </div>
          <div>
            <label className="block text-black dark:text-white">
              Jumlah Orang
            </label>
            <input
              value={orang}
              onChange={(e) => setOrang(e.target.value)}
              type="text"
              placeholder="Masukkan Nama Paket Foto"
              className="w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 font-medium outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary"
            />
          </div>
          <div>
            <label className="block text-black dark:text-white">Waktu</label>
            <input
              value={waktu}
              onChange={(e) => setWaktu(e.target.value)}
              type="text"
              placeholder="Masukkan Nama Paket Foto"
              className="w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 font-medium outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary"
            />
          </div>
          <div>
            <label className="block text-black dark:text-white">
              Ganti Pakaian
            </label>
            <input
              value={ganti_pakaian}
              onChange={(e) => setGantiPakaian(e.target.value)}
              type="text"
              placeholder="Masukkan Nama Paket Foto"
              className="w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 font-medium outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary"
            />
          </div>
          <div>
            <label className="block text-black dark:text-white">
              Benefit 1
            </label>
            <input
              value={keuntungan1}
              onChange={(e) => setKeuntungan1(e.target.value)}
              type="text"
              placeholder="Masukkan Nama Paket Foto"
              className="w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 font-medium outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary"
            />
          </div>
          <div>
            <label className="block text-black dark:text-white">
              Benefit 2
            </label>
            <input
              value={keuntungan2}
              onChange={(e) => setKeuntungan2(e.target.value)}
              type="text"
              placeholder="Masukkan Nama Paket Foto"
              className="w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 font-medium outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary"
            />
          </div>
          <div>
            <label className="mb-3 block text-black dark:text-white">
              Harga
            </label>
            <input
              value={harga}
              onChange={(e) => setHarga(e.target.value)}
              type="text"
              placeholder="Masukkan Harga Paket"
              className="w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 font-medium outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary"
            />
          </div>
        </div>
      </div>

      <button
        onClick={MasukkanDataPaket}
        className="inline-flex items-center justify-center gap-2.5 bg-primary py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10"
      >
        <span>
          <svg
            className="fill-current"
            width="20"
            height="20"
            viewBox="0 0 20 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M17.8125 16.6656H2.1875C1.69022 16.6656 1.21331 16.4681 0.861675 16.1164C0.510044 15.7648 0.3125 15.2879 0.3125 14.7906V5.20935C0.3125 4.71207 0.510044 4.23516 0.861675 3.88353C1.21331 3.53189 1.69022 3.33435 2.1875 3.33435H17.8125C18.3098 3.33435 18.7867 3.53189 19.1383 3.88353C19.49 4.23516 19.6875 4.71207 19.6875 5.20935V14.7906C19.6875 15.2879 19.49 15.7648 19.1383 16.1164C18.7867 16.4681 18.3098 16.6656 17.8125 16.6656ZM2.1875 4.58435C2.02174 4.58435 1.86277 4.6502 1.74556 4.76741C1.62835 4.88462 1.5625 5.04359 1.5625 5.20935V14.7906C1.5625 14.9564 1.62835 15.1153 1.74556 15.2325C1.86277 15.3498 2.02174 15.4156 2.1875 15.4156H17.8125C17.9783 15.4156 18.1372 15.3498 18.2544 15.2325C18.3717 15.1153 18.4375 14.9564 18.4375 14.7906V5.20935C18.4375 5.04359 18.3717 4.88462 18.2544 4.76741C18.1372 4.6502 17.9783 4.58435 17.8125 4.58435H2.1875Z"
              fill=""
            />
            <path
              d="M9.9996 10.6438C9.63227 10.6437 9.2721 10.5421 8.95898 10.35L0.887102 5.45001C0.744548 5.36381 0.642073 5.22452 0.602222 5.06277C0.58249 4.98268 0.578725 4.89948 0.591144 4.81794C0.603563 4.73639 0.631922 4.65809 0.674602 4.58751C0.717281 4.51692 0.773446 4.45543 0.839888 4.40655C0.906331 4.35767 0.981751 4.32236 1.06184 4.30263C1.22359 4.26277 1.39455 4.28881 1.5371 4.37501L9.60898 9.28126C9.7271 9.35331 9.8628 9.39143 10.0012 9.39143C10.1395 9.39143 10.2752 9.35331 10.3934 9.28126L18.4621 4.37501C18.5323 4.33233 18.6102 4.30389 18.6913 4.29131C18.7725 4.27873 18.8554 4.28227 18.9352 4.30171C19.015 4.32115 19.0901 4.35612 19.1564 4.40462C19.2227 4.45312 19.2788 4.51421 19.3215 4.58438C19.3642 4.65456 19.3926 4.73245 19.4052 4.81362C19.4177 4.89478 19.4142 4.97763 19.3948 5.05743C19.3753 5.13723 19.3404 5.21242 19.2919 5.27871C19.2434 5.34499 19.1823 5.40108 19.1121 5.44376L11.0402 10.35C10.7271 10.5421 10.3669 10.6437 9.9996 10.6438Z"
              fill=""
            />
          </svg>
        </span>
        Insert Data
      </button>
    </LayoutAuth>
  );
}

